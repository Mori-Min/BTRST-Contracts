{
  "address": "0x1BF4452518c3e85E02D515C39EAa40858547C80C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "timelock_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "BTRST_",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "guardian_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "quorumVotes_",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "proposalThreshold_",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "votingPeriod_",
          "type": "uint32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalCanceled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "indexed": false,
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "ProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "ProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "ProposalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "votes",
          "type": "uint256"
        }
      ],
      "name": "VoteCast",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BALLOT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "BTRST",
      "outputs": [
        {
          "internalType": "contract BTRSTInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__abdicate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "__acceptAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__executeSetTimelockPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newPendingAdmin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        }
      ],
      "name": "__queueSetTimelockPendingAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        }
      ],
      "name": "castVote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "support",
          "type": "bool"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "castVoteBySig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "execute",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "getActions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "voter",
          "type": "address"
        }
      ],
      "name": "getReceipt",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bool",
              "name": "hasVoted",
              "type": "bool"
            },
            {
              "internalType": "bool",
              "name": "support",
              "type": "bool"
            },
            {
              "internalType": "uint96",
              "name": "votes",
              "type": "uint96"
            }
          ],
          "internalType": "struct GovernorAlpha.Receipt",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "latestProposalIds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalMaxOperations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposalThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "eta",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "forVotes",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "againstVotes",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "canceled",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "executed",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "targets",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        },
        {
          "internalType": "string[]",
          "name": "signatures",
          "type": "string[]"
        },
        {
          "internalType": "bytes[]",
          "name": "calldatas",
          "type": "bytes[]"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        }
      ],
      "name": "propose",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "queue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "quorumVotes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "state",
      "outputs": [
        {
          "internalType": "enum GovernorAlpha.ProposalState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timelock",
      "outputs": [
        {
          "internalType": "contract TimelockInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingDelay",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "votingPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xe16f0a1f2f01be48fa13e3d31c5869b02f464b57df5bfaaa503bd496c3d44eba",
  "receipt": {
    "to": null,
    "from": "0x9A7C6d6f6317C17c6aFb4F5D18B3e2F8E02F655F",
    "contractAddress": "0x1BF4452518c3e85E02D515C39EAa40858547C80C",
    "transactionIndex": 31,
    "gasUsed": "4656429",
    "logsBloom": "0x
    "blockHash": "0x27ffaa6221ccae414c9a6ea6637634ff01987d8ba8ab69159f9029d6a39aa8ff",
    "transactionHash": "0xe16f0a1f2f01be48fa13e3d31c5869b02f464b57df5bfaaa503bd496c3d44eba",
    "logs": [],
    "blockNumber": 11914262,
    "cumulativeGasUsed": "5885147",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xa5cBd179CedF7433E1f57ac400dEE20119ddc719",
    "0xe5e9e274bA811fAE56Ba3054119b509b8fFaFB97",
    "0x9A7C6d6f6317C17c6aFb4F5D18B3e2F8E02F655F",
    "100000000000000000000000",
    "0",
    "17280"
  ],
  "solcInputHash": "0b946528d7b92ef03565ee1f4997462c",
  "metadata": "{\"compiler\":{\"version\":\"0.6.7+commit.b8d736ae\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"timelock_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"BTRST_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"quorumVotes_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"proposalThreshold_\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"votingPeriod_\",\"type\":\"uint32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalCanceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"ProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"ProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"ProposalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votes\",\"type\":\"uint256\"}],\"name\":\"VoteCast\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BALLOT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BTRST\",\"outputs\":[{\"internalType\":\"contract BTRSTInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__abdicate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"__acceptAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__executeSetTimelockPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPendingAdmin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"}],\"name\":\"__queueSetTimelockPendingAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"}],\"name\":\"castVote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"castVoteBySig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"execute\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"getActions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"}],\"name\":\"getReceipt\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"support\",\"type\":\"bool\"},{\"internalType\":\"uint96\",\"name\":\"votes\",\"type\":\"uint96\"}],\"internalType\":\"struct GovernorAlpha.Receipt\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"latestProposalIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalMaxOperations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposalThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"eta\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"forVotes\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"againstVotes\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"canceled\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"targets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"signatures\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"calldatas\",\"type\":\"bytes[]\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"}],\"name\":\"propose\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"queue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quorumVotes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"state\",\"outputs\":[{\"internalType\":\"enum GovernorAlpha.ProposalState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timelock\",\"outputs\":[{\"internalType\":\"contract TimelockInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingDelay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"votingPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"proposalMaxOperations()\":{\"notice\":\"The maximum number of actions that can be included in a proposal\"},\"votingDelay()\":{\"notice\":\"The delay before voting on a proposal may take place, once proposed\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/GovernorAlpha.sol\":\"GovernorAlpha\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/GovernorAlpha.sol\":{\"content\":\"pragma solidity ^0.8.11;\\npragma experimental ABIEncoderV2;\\n\\ncontract GovernorAlpha {\\n    /// @notice The name of this contract\\n    string public constant name = \\\"BTRST Governor Alpha\\\";\\n\\n    /// @notice The number of votes required in order for a voter to become a proposer\\n    uint256 private _proposalThreshold;\\n\\n    /// @notice The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed\\n    uint256 private _quorumVotes;\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n    uint32 private _votingPeriod;\\n\\n    /// @notice The maximum number of actions that can be included in a proposal\\n    function proposalMaxOperations() public pure returns (uint256) {\\n        return 10;\\n    } // 10 actions\\n\\n    /// @notice The delay before voting on a proposal may take place, once proposed\\n    function votingDelay() public pure returns (uint256) {\\n        return 1;\\n    } // 1 block\\n\\n    /// @notice The duration of voting on a proposal, in blocks\\n\\n    /// @notice The address of the BTRST Protocol Timelock\\n    TimelockInterface public timelock;\\n\\n    /// @notice The address of the BTRST governance token\\n    BTRSTInterface public BTRST;\\n\\n    /// @notice The address of the Governor Guardian\\n    address public guardian;\\n\\n    /// @notice The total number of proposals\\n    uint256 public proposalCount;\\n\\n    struct Proposal {\\n        /// @notice Unique id for looking up a proposal\\n        uint256 id;\\n        /// @notice Creator of the proposal\\n        address proposer;\\n        /// @notice The timestamp that the proposal will be available for execution, set once the vote succeeds\\n        uint256 eta;\\n        /// @notice the ordered list of target addresses for calls to be made\\n        address[] targets;\\n        /// @notice The ordered list of values (i.e. msg.value) to be passed to the calls to be made\\n        uint256[] values;\\n        /// @notice The ordered list of function signatures to be called\\n        string[] signatures;\\n        /// @notice The ordered list of calldata to be passed to each call\\n        bytes[] calldatas;\\n        /// @notice The block at which voting begins: holders must delegate their votes prior to this block\\n        uint256 startBlock;\\n        /// @notice The block at which voting ends: votes must be cast prior to this block\\n        uint256 endBlock;\\n        /// @notice Current number of votes in favor of this proposal\\n        uint256 forVotes;\\n        /// @notice Current number of votes in opposition to this proposal\\n        uint256 againstVotes;\\n        /// @notice Flag marking whether the proposal has been canceled\\n        bool canceled;\\n        /// @notice Flag marking whether the proposal has been executed\\n        bool executed;\\n        /// @notice Receipts of ballots for the entire set of voters\\n        mapping(address => Receipt) receipts;\\n    }\\n\\n    /// @notice Ballot receipt record for a voter\\n    struct Receipt {\\n        /// @notice Whether or not a vote has been cast\\n        bool hasVoted;\\n        /// @notice Whether or not the voter supports the proposal\\n        bool support;\\n        /// @notice The number of votes the voter had, which were cast\\n        uint96 votes;\\n    }\\n\\n    /// @notice Possible states that a proposal may be in\\n    enum ProposalState {\\n        Pending,\\n        Active,\\n        Canceled,\\n        Defeated,\\n        Succeeded,\\n        Queued,\\n        Expired,\\n        Executed\\n    }\\n\\n    /// @notice The official record of all proposals ever proposed\\n    mapping(uint256 => Proposal) public proposals;\\n\\n    /// @notice The latest proposal for each proposer\\n    mapping(address => uint256) public latestProposalIds;\\n\\n    /// @notice The EIP-712 typehash for the contract's domain\\n    bytes32 public constant DOMAIN_TYPEHASH =\\n        keccak256(\\n            \\\"EIP712Domain(string name,uint256 chainId,address verifyingContract)\\\"\\n        );\\n\\n    /// @notice The EIP-712 typehash for the ballot struct used by the contract\\n    bytes32 public constant BALLOT_TYPEHASH =\\n        keccak256(\\\"Ballot(uint256 proposalId,bool support)\\\");\\n\\n    /// @notice An event emitted when a new proposal is created\\n    event ProposalCreated(\\n        uint256 id,\\n        address proposer,\\n        address[] targets,\\n        uint256[] values,\\n        string[] signatures,\\n        bytes[] calldatas,\\n        uint256 startBlock,\\n        uint256 endBlock,\\n        string description\\n    );\\n\\n    /// @notice An event emitted when a vote has been cast on a proposal\\n    event VoteCast(\\n        address voter,\\n        uint256 proposalId,\\n        bool support,\\n        uint256 votes\\n    );\\n\\n    /// @notice An event emitted when a proposal has been canceled\\n    event ProposalCanceled(uint256 id);\\n\\n    /// @notice An event emitted when a proposal has been queued in the Timelock\\n    event ProposalQueued(uint256 id, uint256 eta);\\n\\n    /// @notice An event emitted when a proposal has been executed in the Timelock\\n    event ProposalExecuted(uint256 id);\\n\\n    constructor(\\n        address timelock_,\\n        address BTRST_,\\n        address guardian_,\\n        uint256 quorumVotes_,\\n        uint256 proposalThreshold_,\\n        uint32 votingPeriod_\\n    ) public {\\n        timelock = TimelockInterface(timelock_);\\n        BTRST = BTRSTInterface(BTRST_);\\n        guardian = guardian_;\\n        _quorumVotes = quorumVotes_;\\n        _proposalThreshold = proposalThreshold_;\\n        _votingPeriod = votingPeriod_;\\n    }\\n\\n    function quorumVotes() public view returns (uint256) {\\n        return _quorumVotes;\\n    }\\n\\n    function proposalThreshold() public view returns (uint256) {\\n        return _proposalThreshold;\\n    }\\n\\n    function votingPeriod() public view returns (uint256) {\\n        return _votingPeriod;\\n    }\\n\\n    function propose(\\n        address[] memory targets,\\n        uint256[] memory values,\\n        string[] memory signatures,\\n        bytes[] memory calldatas,\\n        string memory description\\n    ) public returns (uint256) {\\n        require(\\n            BTRST.getPriorVotes(msg.sender, sub256(block.number, 1)) >=\\n                proposalThreshold(),\\n            \\\"GovernorAlpha::propose: proposer votes below proposal threshold\\\"\\n        );\\n        require(\\n            targets.length == values.length &&\\n                targets.length == signatures.length &&\\n                targets.length == calldatas.length,\\n            \\\"GovernorAlpha::propose: proposal function information arity mismatch\\\"\\n        );\\n        require(\\n            targets.length != 0,\\n            \\\"GovernorAlpha::propose: must provide actions\\\"\\n        );\\n        require(\\n            targets.length <= proposalMaxOperations(),\\n            \\\"GovernorAlpha::propose: too many actions\\\"\\n        );\\n\\n        uint256 latestProposalId = latestProposalIds[msg.sender];\\n        if (latestProposalId != 0) {\\n            ProposalState proposersLatestProposalState = state(\\n                latestProposalId\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Active,\\n                \\\"GovernorAlpha::propose: one live proposal per proposer, found an already active proposal\\\"\\n            );\\n            require(\\n                proposersLatestProposalState != ProposalState.Pending,\\n                \\\"GovernorAlpha::propose: one live proposal per proposer, found an already pending proposal\\\"\\n            );\\n        }\\n\\n        uint256 startBlock = add256(block.number, votingDelay());\\n        uint256 endBlock = add256(startBlock, votingPeriod());\\n\\n        proposalCount++;\\n        Proposal memory newProposal = Proposal({\\n            id: proposalCount,\\n            proposer: msg.sender,\\n            eta: 0,\\n            targets: targets,\\n            values: values,\\n            signatures: signatures,\\n            calldatas: calldatas,\\n            startBlock: startBlock,\\n            endBlock: endBlock,\\n            forVotes: 0,\\n            againstVotes: 0,\\n            canceled: false,\\n            executed: false\\n        });\\n\\n        proposals[newProposal.id] = newProposal;\\n        latestProposalIds[newProposal.proposer] = newProposal.id;\\n\\n        emit ProposalCreated(\\n            newProposal.id,\\n            msg.sender,\\n            targets,\\n            values,\\n            signatures,\\n            calldatas,\\n            startBlock,\\n            endBlock,\\n            description\\n        );\\n        return newProposal.id;\\n    }\\n\\n    function queue(uint256 proposalId) public {\\n        require(\\n            state(proposalId) == ProposalState.Succeeded,\\n            \\\"GovernorAlpha::queue: proposal can only be queued if it is succeeded\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        uint256 eta = add256(block.timestamp, timelock.delay());\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            _queueOrRevert(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                eta\\n            );\\n        }\\n        proposal.eta = eta;\\n        emit ProposalQueued(proposalId, eta);\\n    }\\n\\n    function _queueOrRevert(\\n        address target,\\n        uint256 value,\\n        string memory signature,\\n        bytes memory data,\\n        uint256 eta\\n    ) internal {\\n        require(\\n            !timelock.queuedTransactions(\\n                keccak256(abi.encode(target, value, signature, data, eta))\\n            ),\\n            \\\"GovernorAlpha::_queueOrRevert: proposal action already queued at eta\\\"\\n        );\\n        timelock.queueTransaction(target, value, signature, data, eta);\\n    }\\n\\n    function execute(uint256 proposalId) public payable {\\n        require(\\n            state(proposalId) == ProposalState.Queued,\\n            \\\"GovernorAlpha::execute: proposal can only be executed if it is queued\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        proposal.executed = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.executeTransaction{value: proposal.values[i]}(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n        emit ProposalExecuted(proposalId);\\n    }\\n\\n    function cancel(uint256 proposalId) public {\\n        ProposalState state = state(proposalId);\\n        require(\\n            state != ProposalState.Executed,\\n            \\\"GovernorAlpha::cancel: cannot cancel executed proposal\\\"\\n        );\\n\\n        Proposal storage proposal = proposals[proposalId];\\n        require(\\n            msg.sender == guardian ||\\n                BTRST.getPriorVotes(\\n                    proposal.proposer,\\n                    sub256(block.number, 1)\\n                ) <\\n                proposalThreshold(),\\n            \\\"GovernorAlpha::cancel: proposer above threshold\\\"\\n        );\\n\\n        proposal.canceled = true;\\n        for (uint256 i = 0; i < proposal.targets.length; i++) {\\n            timelock.cancelTransaction(\\n                proposal.targets[i],\\n                proposal.values[i],\\n                proposal.signatures[i],\\n                proposal.calldatas[i],\\n                proposal.eta\\n            );\\n        }\\n\\n        emit ProposalCanceled(proposalId);\\n    }\\n\\n    function getActions(uint256 proposalId)\\n        public\\n        view\\n        returns (\\n            address[] memory targets,\\n            uint256[] memory values,\\n            string[] memory signatures,\\n            bytes[] memory calldatas\\n        )\\n    {\\n        Proposal storage p = proposals[proposalId];\\n        return (p.targets, p.values, p.signatures, p.calldatas);\\n    }\\n\\n    function getReceipt(uint256 proposalId, address voter)\\n        public\\n        view\\n        returns (Receipt memory)\\n    {\\n        return proposals[proposalId].receipts[voter];\\n    }\\n\\n    function state(uint256 proposalId) public view returns (ProposalState) {\\n        require(\\n            proposalCount >= proposalId && proposalId > 0,\\n            \\\"GovernorAlpha::state: invalid proposal id\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        if (proposal.canceled) {\\n            return ProposalState.Canceled;\\n        } else if (block.number <= proposal.startBlock) {\\n            return ProposalState.Pending;\\n        } else if (block.number <= proposal.endBlock) {\\n            return ProposalState.Active;\\n        } else if (\\n            proposal.forVotes <= proposal.againstVotes ||\\n            proposal.forVotes < quorumVotes()\\n        ) {\\n            return ProposalState.Defeated;\\n        } else if (proposal.eta == 0) {\\n            return ProposalState.Succeeded;\\n        } else if (proposal.executed) {\\n            return ProposalState.Executed;\\n        } else if (\\n            block.timestamp >= add256(proposal.eta, timelock.GRACE_PERIOD())\\n        ) {\\n            return ProposalState.Expired;\\n        } else {\\n            return ProposalState.Queued;\\n        }\\n    }\\n\\n    function castVote(uint256 proposalId, bool support) public {\\n        return _castVote(msg.sender, proposalId, support);\\n    }\\n\\n    function castVoteBySig(\\n        uint256 proposalId,\\n        bool support,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) public {\\n        bytes32 domainSeparator = keccak256(\\n            abi.encode(\\n                DOMAIN_TYPEHASH,\\n                keccak256(bytes(name)),\\n                getChainId(),\\n                address(this)\\n            )\\n        );\\n        bytes32 structHash = keccak256(\\n            abi.encode(BALLOT_TYPEHASH, proposalId, support)\\n        );\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\\"\\\\x19\\\\x01\\\", domainSeparator, structHash)\\n        );\\n        address signatory = ecrecover(digest, v, r, s);\\n        require(\\n            signatory != address(0),\\n            \\\"GovernorAlpha::castVoteBySig: invalid signature\\\"\\n        );\\n        return _castVote(signatory, proposalId, support);\\n    }\\n\\n    function _castVote(\\n        address voter,\\n        uint256 proposalId,\\n        bool support\\n    ) internal {\\n        require(\\n            state(proposalId) == ProposalState.Active,\\n            \\\"GovernorAlpha::_castVote: voting is closed\\\"\\n        );\\n        Proposal storage proposal = proposals[proposalId];\\n        Receipt storage receipt = proposal.receipts[voter];\\n        require(\\n            receipt.hasVoted == false,\\n            \\\"GovernorAlpha::_castVote: voter already voted\\\"\\n        );\\n        uint96 votes = BTRST.getPriorVotes(voter, proposal.startBlock);\\n\\n        if (support) {\\n            proposal.forVotes = add256(proposal.forVotes, votes);\\n        } else {\\n            proposal.againstVotes = add256(proposal.againstVotes, votes);\\n        }\\n\\n        receipt.hasVoted = true;\\n        receipt.support = support;\\n        receipt.votes = votes;\\n\\n        emit VoteCast(voter, proposalId, support, votes);\\n    }\\n\\n    function __acceptAdmin() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__acceptAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.acceptAdmin();\\n    }\\n\\n    function __abdicate() public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__abdicate: sender must be gov guardian\\\"\\n        );\\n        guardian = address(0);\\n    }\\n\\n    function __queueSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__queueSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.queueTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function __executeSetTimelockPendingAdmin(\\n        address newPendingAdmin,\\n        uint256 eta\\n    ) public {\\n        require(\\n            msg.sender == guardian,\\n            \\\"GovernorAlpha::__executeSetTimelockPendingAdmin: sender must be gov guardian\\\"\\n        );\\n        timelock.executeTransaction(\\n            address(timelock),\\n            0,\\n            \\\"setPendingAdmin(address)\\\",\\n            abi.encode(newPendingAdmin),\\n            eta\\n        );\\n    }\\n\\n    function add256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"addition overflow\\\");\\n        return c;\\n    }\\n\\n    function sub256(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"subtraction underflow\\\");\\n        return a - b;\\n    }\\n\\n    function getChainId() internal pure returns (uint256) {\\n        uint256 chainId;\\n        assembly {\\n            chainId := chainid()\\n        }\\n        return chainId;\\n    }\\n}\\n\\ninterface TimelockInterface {\\n    function delay() external view returns (uint256);\\n\\n    function GRACE_PERIOD() external view returns (uint256);\\n\\n    function acceptAdmin() external;\\n\\n    function queuedTransactions(bytes32 hash) external view returns (bool);\\n\\n    function queueTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external returns (bytes32);\\n\\n    function cancelTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external;\\n\\n    function executeTransaction(\\n        address target,\\n        uint256 value,\\n        string calldata signature,\\n        bytes calldata data,\\n        uint256 eta\\n    ) external payable returns (bytes memory);\\n}\\n\\ninterface BTRSTInterface {\\n    function getPriorVotes(address account, uint256 blockNumber)\\n        external\\n        view\\n        returns (uint96);\\n}\\n\",\"keccak256\":\"0xa5413bf3fbb64894e6460b0ce59c6e75ab75a4cdf562caa5c9c0117cdf2e5240\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061019c5760003560e01c80634634c61f116100ec578063d33219b41161008a578063ddf0b00911610064578063ddf0b009146105b1578063deaaa7cc146105da578063e23a9a5214610605578063fe0d94c1146106425761019c565b8063d33219b41461051e578063da35c66414610549578063da95691a146105745761019c565b806386ed23e2116100c657806386ed23e21461048857806391500671146104b3578063b58131b0146104dc578063b9a61961146105075761019c565b80634634c61f1461041d578063760fbc13146104465780637bdbe4d01461045d5761019c565b806321f43e42116101595780633932abb1116101335780633932abb1146103615780633e4f49e61461038c57806340e58ee5146103c9578063452a9320146103f25761019c565b806321f43e42146102cd57806324bc1a64146102f6578063328dd982146103215761019c565b8063013cf08b146101a157806302a251a3146101e657806306fdde031461021157806315373e3d1461023c57806317977c611461026557806320606b70146102a2575b600080fd5b3480156101ad57600080fd5b506101c860048036038101906101c3919061332f565b61065e565b6040516101dd99989796959493929190614bf1565b60405180910390f35b3480156101f257600080fd5b506101fb6106e6565b6040516102089190614b26565b60405180910390f35b34801561021d57600080fd5b50610226610706565b6040516102339190614849565b60405180910390f35b34801561024857600080fd5b50610263600480360381019061025e91906133bd565b61073f565b005b34801561027157600080fd5b5061028c60048036038101906102879190613148565b61074e565b6040516102999190614b26565b60405180910390f35b3480156102ae57600080fd5b506102b7610766565b6040516102c4919061471c565b60405180910390f35b3480156102d957600080fd5b506102f460048036038101906102ef9190613171565b61077d565b005b34801561030257600080fd5b5061030b61090c565b6040516103189190614b26565b60405180910390f35b34801561032d57600080fd5b506103486004803603810190610343919061332f565b610916565b60405161035894939291906146bb565b60405180910390f35b34801561036d57600080fd5b50610376610bf3565b6040516103839190614b26565b60405180910390f35b34801561039857600080fd5b506103b360048036038101906103ae919061332f565b610bfc565b6040516103c0919061482e565b60405180910390f35b3480156103d557600080fd5b506103f060048036038101906103eb919061332f565b610de1565b005b3480156103fe57600080fd5b5061040761117e565b60405161041491906144e8565b60405180910390f35b34801561042957600080fd5b50610444600480360381019061043f91906133f9565b6111a4565b005b34801561045257600080fd5b5061045b611373565b005b34801561046957600080fd5b50610472611447565b60405161047f9190614b26565b60405180910390f35b34801561049457600080fd5b5061049d611450565b6040516104aa91906147f8565b60405180910390f35b3480156104bf57600080fd5b506104da60048036038101906104d59190613171565b611476565b005b3480156104e857600080fd5b506104f1611600565b6040516104fe9190614b26565b60405180910390f35b34801561051357600080fd5b5061051c611609565b005b34801561052a57600080fd5b5061053361171d565b6040516105409190614813565b60405180910390f35b34801561055557600080fd5b5061055e611743565b60405161056b9190614b26565b60405180910390f35b34801561058057600080fd5b5061059b600480360381019061059691906131ad565b611749565b6040516105a89190614b26565b60405180910390f35b3480156105bd57600080fd5b506105d860048036038101906105d3919061332f565b611d17565b005b3480156105e657600080fd5b506105ef612067565b6040516105fc919061471c565b60405180910390f35b34801561061157600080fd5b5061062c60048036038101906106279190613381565b61207e565b6040516106399190614b0b565b60405180910390f35b61065c6004803603810190610657919061332f565b612160565b005b60066020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201549080600701549080600801549080600901549080600a01549080600b0160009054906101000a900460ff169080600b0160019054906101000a900460ff16905089565b6000600260009054906101000a900463ffffffff1663ffffffff16905090565b6040518060400160405280601481526020017f425452535420476f7665726e6f7220416c70686100000000000000000000000081525081565b61074a3383836123ae565b5050565b60076020528060005260406000206000915090505481565b604051610772906144be565b604051809103902081565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461080d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610804906148cb565b60405180910390fd5b600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630825f38f600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008560405160200161088191906144e8565b604051602081830303815290604052856040518563ffffffff1660e01b81526004016108b0949392919061452c565b600060405180830381600087803b1580156108ca57600080fd5b505af11580156108de573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f8201168201806040525081019061090791906132ee565b505050565b6000600154905090565b606080606080600060066000878152602001908152602001600020905080600301816004018260050183600601838054806020026020016040519081016040528092919081815260200182805480156109c457602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161097a575b5050505050935082805480602002602001604051908101604052809291908181526020018280548015610a1657602002820191906000526020600020905b815481526020019060010190808311610a02575b5050505050925081805480602002602001604051908101604052809291908181526020016000905b82821015610afa578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610ae65780601f10610abb57610100808354040283529160200191610ae6565b820191906000526020600020905b815481529060010190602001808311610ac957829003601f168201915b505050505081526020019060010190610a3e565b50505050915080805480602002602001604051908101604052809291908181526020016000905b82821015610bdd578382906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610bc95780601f10610b9e57610100808354040283529160200191610bc9565b820191906000526020600020905b815481529060010190602001808311610bac57829003601f168201915b505050505081526020019060010190610b21565b5050505090509450945094509450509193509193565b60006001905090565b60008160055410158015610c105750600082115b610c4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c46906148eb565b60405180910390fd5b600060066000848152602001908152602001600020905080600b0160009054906101000a900460ff1615610c87576002915050610ddc565b80600701544311610c9c576000915050610ddc565b80600801544311610cb1576001915050610ddc565b80600a01548160090154111580610cd25750610ccb61090c565b8160090154105b15610ce1576003915050610ddc565b600081600201541415610cf8576004915050610ddc565b80600b0160019054906101000a900460ff1615610d19576007915050610ddc565b610dc68160020154600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c1a287e26040518163ffffffff1660e01b815260040160206040518083038186803b158015610d8957600080fd5b505afa158015610d9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dc19190613358565b61267d565b4210610dd6576006915050610ddc565b60059150505b919050565b6000610dec82610bfc565b9050600780811115610dfa57fe5b816007811115610e0657fe5b1415610e47576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3e90614a8b565b60405180910390fd5b6000600660008481526020019081526020016000209050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610fa85750610ebd611600565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663782d6fe18360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610f2b4360016126d2565b6040518363ffffffff1660e01b8152600401610f4892919061458b565b60206040518083038186803b158015610f6057600080fd5b505afa158015610f74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f989190613470565b6bffffffffffffffffffffffff16105b610fe7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fde906149cb565b60405180910390fd5b600181600b0160006101000a81548160ff02191690831515021790555060008090505b816003018054905081101561114157600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663591fcdfe83600301838154811061106657fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460040184815481106110a057fe5b90600052602060002001548560050185815481106110ba57fe5b906000526020600020018660060186815481106110d357fe5b9060005260206000200187600201546040518663ffffffff1660e01b815260040161110295949392919061465a565b600060405180830381600087803b15801561111c57600080fd5b505af1158015611130573d6000803e3d6000fd5b50505050808060010191505061100a565b507f789cf55be980739dad1d0699b93b58e806b51c9d96619bfa8fe0a28abaa7b30c836040516111719190614b26565b60405180910390a1505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006040516111b2906144be565b60405180910390206040518060400160405280601481526020017f425452535420476f7665726e6f7220416c706861000000000000000000000000815250805190602001206111ff612722565b306040516020016112139493929190614737565b6040516020818303038152906040528051906020012090506000604051611239906144d3565b604051809103902087876040516020016112559392919061477c565b60405160208183030381529060405280519060200120905060008282604051602001611282929190614487565b6040516020818303038152906040528051906020012090506000600182888888604051600081526020016040526040516112bf94939291906147b3565b6020604051602081039080840390855afa1580156112e1573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561135d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161135490614a4b565b60405180910390fd5b611368818a8a6123ae565b505050505050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611403576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fa90614aeb565b60405180910390fd5b6000600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000600a905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fd9061494b565b60405180910390fd5b600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a66f901600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660008560405160200161157a91906144e8565b604051602081830303815290604052856040518563ffffffff1660e01b81526004016115a9949392919061452c565b602060405180830381600087803b1580156115c357600080fd5b505af11580156115d7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fb91906132c5565b505050565b60008054905090565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611699576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116909061486b565b60405180910390fd5b600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e18b6816040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561170357600080fd5b505af1158015611717573d6000803e3d6000fd5b50505050565b600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055481565b6000611753611600565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663782d6fe13361179d4360016126d2565b6040518363ffffffff1660e01b81526004016117ba929190614503565b60206040518083038186803b1580156117d257600080fd5b505afa1580156117e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061180a9190613470565b6bffffffffffffffffffffffff161015611859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185090614a2b565b60405180910390fd5b8451865114801561186b575083518651145b8015611878575082518651145b6118b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ae906149ab565b60405180910390fd5b6000865114156118fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118f390614a0b565b60405180910390fd5b611904611447565b86511115611947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193e9061496b565b60405180910390fd5b6000600760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060008114611a5657600061199e82610bfc565b9050600160078111156119ad57fe5b8160078111156119b957fe5b14156119fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119f190614a6b565b60405180910390fd5b60006007811115611a0757fe5b816007811115611a1357fe5b1415611a54576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a4b9061492b565b60405180910390fd5b505b6000611a6943611a64610bf3565b61267d565b90506000611a7e82611a796106e6565b61267d565b9050600560008154809291906001019190505550611a9a612905565b604051806101a0016040528060055481526020013373ffffffffffffffffffffffffffffffffffffffff168152602001600081526020018b81526020018a815260200189815260200188815260200184815260200183815260200160008152602001600081526020016000151581526020016000151581525090508060066000836000015181526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201556060820151816003019080519060200190611ba4929190612987565b506080820151816004019080519060200190611bc1929190612a11565b5060a0820151816005019080519060200190611bde929190612a5e565b5060c0820151816006019080519060200190611bfb929190612abe565b5060e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0160006101000a81548160ff02191690831515021790555061018082015181600b0160016101000a81548160ff021916908315150217905550905050806000015160076000836020015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f7d84a6263ae0d98d3329bd7b46bb4e8d6f98cd35a7adb45c274c8b7fd5ebd5e08160000151338c8c8c8c89898e604051611cfb99989796959493929190614b41565b60405180910390a1806000015194505050505095945050505050565b60046007811115611d2457fe5b611d2d82610bfc565b6007811115611d3857fe5b14611d78576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6f9061488b565b60405180910390fd5b60006006600083815260200190815260200160002090506000611e3a42600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636a42b8f86040518163ffffffff1660e01b815260040160206040518083038186803b158015611dfd57600080fd5b505afa158015611e11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e359190613358565b61267d565b905060008090505b826003018054905081101561201f57612012836003018281548110611e6357fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846004018381548110611e9d57fe5b9060005260206000200154856005018481548110611eb757fe5b906000526020600020018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f555780601f10611f2a57610100808354040283529160200191611f55565b820191906000526020600020905b815481529060010190602001808311611f3857829003601f168201915b5050505050866006018581548110611f6957fe5b906000526020600020018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156120075780601f10611fdc57610100808354040283529160200191612007565b820191906000526020600020905b815481529060010190602001808311611fea57829003601f168201915b50505050508661272f565b8080600101915050611e42565b508082600201819055507f9a2e42fd6722813d69113e7d0079d3d940171428df7373df9c7f7617cfda2892838260405161205a929190614c7e565b60405180910390a1505050565b604051612073906144d3565b604051809103902081565b612086612b1e565b60066000848152602001908152602001600020600c0160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060600160405290816000820160009054906101000a900460ff161515151581526020016000820160019054906101000a900460ff161515151581526020016000820160029054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681525050905092915050565b6005600781111561216d57fe5b61217682610bfc565b600781111561218157fe5b146121c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121b8906148ab565b60405180910390fd5b6000600660008381526020019081526020016000209050600181600b0160016101000a81548160ff02191690831515021790555060008090505b816003018054905081101561237257600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630825f38f83600401838154811061225757fe5b906000526020600020015484600301848154811061227157fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168560040185815481106122ab57fe5b90600052602060002001548660050186815481106122c557fe5b906000526020600020018760060187815481106122de57fe5b9060005260206000200188600201546040518763ffffffff1660e01b815260040161230d95949392919061465a565b6000604051808303818588803b15801561232657600080fd5b505af115801561233a573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f8201168201806040525081019061236491906132ee565b5080806001019150506121fb565b507f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f826040516123a29190614b26565b60405180910390a15050565b600160078111156123bb57fe5b6123c483610bfc565b60078111156123cf57fe5b1461240f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161240690614aab565b60405180910390fd5b6000600660008481526020019081526020016000209050600081600c0160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600015158160000160009054906101000a900460ff161515146124c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124ba9061490b565b60405180910390fd5b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663782d6fe18785600701546040518363ffffffff1660e01b815260040161252692919061458b565b60206040518083038186803b15801561253e57600080fd5b505afa158015612552573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125769190613470565b905083156125a75761259a8360090154826bffffffffffffffffffffffff1661267d565b83600901819055506125cc565b6125c383600a0154826bffffffffffffffffffffffff1661267d565b83600a01819055505b60018260000160006101000a81548160ff021916908315150217905550838260000160016101000a81548160ff021916908315150217905550808260000160026101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055507f877856338e13f63d0c36822ff0ef736b80934cd90574a3a5bc9262c39d217c468686868460405161266d94939291906145b4565b60405180910390a1505050505050565b6000808284019050838110156126c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126bf9061498b565b60405180910390fd5b8091505092915050565b600082821115612717576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161270e90614acb565b60405180910390fd5b818303905092915050565b6000804690508091505090565b600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2b0653786868686866040516020016127869594939291906145f9565b604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004016127b8919061471c565b60206040518083038186803b1580156127d057600080fd5b505afa1580156127e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612808919061329c565b15612848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161283f906149eb565b60405180910390fd5b600260049054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a66f90186868686866040518663ffffffff1660e01b81526004016128ab9594939291906145f9565b602060405180830381600087803b1580156128c557600080fd5b505af11580156128d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128fd91906132c5565b505050505050565b604051806101a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001606081526020016060815260200160608152602001600081526020016000815260200160008152602001600081526020016000151581526020016000151581525090565b828054828255906000526020600020908101928215612a00579160200282015b828111156129ff5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906129a7565b5b509050612a0d9190612b51565b5090565b828054828255906000526020600020908101928215612a4d579160200282015b82811115612a4c578251825591602001919060010190612a31565b5b509050612a5a9190612b94565b5090565b828054828255906000526020600020908101928215612aad579160200282015b82811115612aac578251829080519060200190612a9c929190612bb9565b5091602001919060010190612a7e565b5b509050612aba9190612c39565b5090565b828054828255906000526020600020908101928215612b0d579160200282015b82811115612b0c578251829080519060200190612afc929190612c65565b5091602001919060010190612ade565b5b509050612b1a9190612ce5565b5090565b604051806060016040528060001515815260200160001515815260200160006bffffffffffffffffffffffff1681525090565b612b9191905b80821115612b8d57600081816101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550600101612b57565b5090565b90565b612bb691905b80821115612bb2576000816000905550600101612b9a565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612bfa57805160ff1916838001178555612c28565b82800160010185558215612c28579182015b82811115612c27578251825591602001919060010190612c0c565b5b509050612c359190612b94565b5090565b612c6291905b80821115612c5e5760008181612c559190612d11565b50600101612c3f565b5090565b90565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10612ca657805160ff1916838001178555612cd4565b82800160010185558215612cd4579182015b82811115612cd3578251825591602001919060010190612cb8565b5b509050612ce19190612b94565b5090565b612d0e91905b80821115612d0a5760008181612d019190612d59565b50600101612ceb565b5090565b90565b50805460018160011615610100020316600290046000825580601f10612d375750612d56565b601f016020900490600052602060002090810190612d559190612b94565b5b50565b50805460018160011615610100020316600290046000825580601f10612d7f5750612d9e565b601f016020900490600052602060002090810190612d9d9190612b94565b5b50565b600081359050612db0816150e7565b92915050565b600082601f830112612dc757600080fd5b8135612dda612dd582614cd4565b614ca7565b91508181835260208401935060208101905083856020840282011115612dff57600080fd5b60005b83811015612e2f5781612e158882612da1565b845260208401935060208301925050600181019050612e02565b5050505092915050565b600082601f830112612e4a57600080fd5b8135612e5d612e5882614cfc565b614ca7565b9150818183526020840193506020810190508360005b83811015612ea35781358601612e898882612ff8565b845260208401935060208301925050600181019050612e73565b5050505092915050565b600082601f830112612ebe57600080fd5b8135612ed1612ecc82614d24565b614ca7565b9150818183526020840193506020810190508360005b83811015612f175781358601612efd88826130a0565b845260208401935060208301925050600181019050612ee7565b5050505092915050565b600082601f830112612f3257600080fd5b8135612f45612f4082614d4c565b614ca7565b91508181835260208401935060208101905083856020840282011115612f6a57600080fd5b60005b83811015612f9a5781612f8088826130f4565b845260208401935060208301925050600181019050612f6d565b5050505092915050565b600081359050612fb3816150fe565b92915050565b600081519050612fc8816150fe565b92915050565b600081359050612fdd81615115565b92915050565b600081519050612ff281615115565b92915050565b600082601f83011261300957600080fd5b813561301c61301782614d74565b614ca7565b9150808252602083016020830185838301111561303857600080fd5b61304383828461507d565b50505092915050565b600082601f83011261305d57600080fd5b815161307061306b82614d74565b614ca7565b9150808252602083016020830185838301111561308c57600080fd5b61309783828461508c565b50505092915050565b600082601f8301126130b157600080fd5b81356130c46130bf82614da0565b614ca7565b915080825260208301602083018583830111156130e057600080fd5b6130eb83828461507d565b50505092915050565b6000813590506131038161512c565b92915050565b6000815190506131188161512c565b92915050565b60008135905061312d81615143565b92915050565b6000815190506131428161515a565b92915050565b60006020828403121561315a57600080fd5b600061316884828501612da1565b91505092915050565b6000806040838503121561318457600080fd5b600061319285828601612da1565b92505060206131a3858286016130f4565b9150509250929050565b600080600080600060a086880312156131c557600080fd5b600086013567ffffffffffffffff8111156131df57600080fd5b6131eb88828901612db6565b955050602086013567ffffffffffffffff81111561320857600080fd5b61321488828901612f21565b945050604086013567ffffffffffffffff81111561323157600080fd5b61323d88828901612ead565b935050606086013567ffffffffffffffff81111561325a57600080fd5b61326688828901612e39565b925050608086013567ffffffffffffffff81111561328357600080fd5b61328f888289016130a0565b9150509295509295909350565b6000602082840312156132ae57600080fd5b60006132bc84828501612fb9565b91505092915050565b6000602082840312156132d757600080fd5b60006132e584828501612fe3565b91505092915050565b60006020828403121561330057600080fd5b600082015167ffffffffffffffff81111561331a57600080fd5b6133268482850161304c565b91505092915050565b60006020828403121561334157600080fd5b600061334f848285016130f4565b91505092915050565b60006020828403121561336a57600080fd5b600061337884828501613109565b91505092915050565b6000806040838503121561339457600080fd5b60006133a2858286016130f4565b92505060206133b385828601612da1565b9150509250929050565b600080604083850312156133d057600080fd5b60006133de858286016130f4565b92505060206133ef85828601612fa4565b9150509250929050565b600080600080600060a0868803121561341157600080fd5b600061341f888289016130f4565b955050602061343088828901612fa4565b94505060406134418882890161311e565b935050606061345288828901612fce565b925050608061346388828901612fce565b9150509295509295909350565b60006020828403121561348257600080fd5b600061349084828501613133565b91505092915050565b60006134a58383613500565b60208301905092915050565b60006134bd8383613708565b905092915050565b60006134d18383613845565b905092915050565b60006134e5838361443c565b60208301905092915050565b6134fa81614fc9565b82525050565b61350981614f3f565b82525050565b61351881614f3f565b82525050565b600061352982614e36565b6135338185614eac565b935061353e83614dcc565b8060005b8381101561356f5781516135568882613499565b975061356183614e78565b925050600181019050613542565b5085935050505092915050565b600061358782614e41565b6135918185614ebd565b9350836020820285016135a385614ddc565b8060005b858110156135df57848403895281516135c085826134b1565b94506135cb83614e85565b925060208a019950506001810190506135a7565b50829750879550505050505092915050565b60006135fc82614e4c565b6136068185614ece565b93508360208202850161361885614dec565b8060005b85811015613654578484038952815161363585826134c5565b945061364083614e92565b925060208a0199505060018101905061361c565b50829750879550505050505092915050565b600061367182614e57565b61367b8185614edf565b935061368683614dfc565b8060005b838110156136b757815161369e88826134d9565b97506136a983614e9f565b92505060018101905061368a565b5085935050505092915050565b6136cd81614f51565b82525050565b6136dc81614f51565b82525050565b6136eb81614f5d565b82525050565b6137026136fd82614f5d565b6150bf565b82525050565b600061371382614e62565b61371d8185614ef0565b935061372d81856020860161508c565b613736816150c9565b840191505092915050565b600061374c82614e62565b6137568185614f01565b935061376681856020860161508c565b61376f816150c9565b840191505092915050565b60008154600181166000811461379757600181146137bd57613801565b607f60028304166137a88187614f01565b955060ff198316865260208601935050613801565b600282046137cb8187614f01565b95506137d685614e0c565b60005b828110156137f8578154818901526001820191506020810190506137d9565b80880195505050505b505092915050565b61381281614fdb565b82525050565b61382181614fff565b82525050565b61383081615023565b82525050565b61383f81615035565b82525050565b600061385082614e6d565b61385a8185614f12565b935061386a81856020860161508c565b613873816150c9565b840191505092915050565b600061388982614e6d565b6138938185614f23565b93506138a381856020860161508c565b6138ac816150c9565b840191505092915050565b6000815460018116600081146138d457600181146138fa5761393e565b607f60028304166138e58187614f23565b955060ff19831686526020860193505061393e565b600282046139088187614f23565b955061391385614e21565b60005b8281101561393557815481890152600182019150602081019050613916565b80880195505050505b505092915050565b6000613953603983614f23565b91507f476f7665726e6f72416c7068613a3a5f5f61636365707441646d696e3a20736560008301527f6e646572206d75737420626520676f7620677561726469616e000000000000006020830152604082019050919050565b60006139b9604483614f23565b91507f476f7665726e6f72416c7068613a3a71756575653a2070726f706f73616c206360008301527f616e206f6e6c792062652071756575656420696620697420697320737563636560208301527f65646564000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000613a45604583614f23565b91507f476f7665726e6f72416c7068613a3a657865637574653a2070726f706f73616c60008301527f2063616e206f6e6c79206265206578656375746564206966206974206973207160208301527f75657565640000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000613ad1600283614f34565b91507f19010000000000000000000000000000000000000000000000000000000000006000830152600282019050919050565b6000613b11604c83614f23565b91507f476f7665726e6f72416c7068613a3a5f5f6578656375746553657454696d656c60008301527f6f636b50656e64696e6741646d696e3a2073656e646572206d7573742062652060208301527f676f7620677561726469616e00000000000000000000000000000000000000006040830152606082019050919050565b6000613b9d601883614f23565b91507f73657450656e64696e6741646d696e28616464726573732900000000000000006000830152602082019050919050565b6000613bdd602983614f23565b91507f476f7665726e6f72416c7068613a3a73746174653a20696e76616c696420707260008301527f6f706f73616c20696400000000000000000000000000000000000000000000006020830152604082019050919050565b6000613c43602d83614f23565b91507f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f7465722060008301527f616c726561647920766f746564000000000000000000000000000000000000006020830152604082019050919050565b6000613ca9605983614f23565b91507f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560008301527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208301527f20616c72656164792070656e64696e672070726f706f73616c000000000000006040830152606082019050919050565b6000613d35604a83614f23565b91507f476f7665726e6f72416c7068613a3a5f5f717565756553657454696d656c6f6360008301527f6b50656e64696e6741646d696e3a2073656e646572206d75737420626520676f60208301527f7620677561726469616e000000000000000000000000000000000000000000006040830152606082019050919050565b6000613dc1602883614f23565b91507f476f7665726e6f72416c7068613a3a70726f706f73653a20746f6f206d616e7960008301527f20616374696f6e730000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613e27601183614f23565b91507f6164646974696f6e206f766572666c6f770000000000000000000000000000006000830152602082019050919050565b6000613e67604383614f34565b91507f454950373132446f6d61696e28737472696e67206e616d652c75696e7432353660008301527f20636861696e49642c6164647265737320766572696679696e67436f6e74726160208301527f63742900000000000000000000000000000000000000000000000000000000006040830152604382019050919050565b6000613ef3602783614f34565b91507f42616c6c6f742875696e743235362070726f706f73616c49642c626f6f6c207360008301527f7570706f727429000000000000000000000000000000000000000000000000006020830152602782019050919050565b6000613f59604483614f23565b91507f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73616c60008301527f2066756e6374696f6e20696e666f726d6174696f6e206172697479206d69736d60208301527f61746368000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000613fe5602f83614f23565b91507f476f7665726e6f72416c7068613a3a63616e63656c3a2070726f706f7365722060008301527f61626f7665207468726573686f6c6400000000000000000000000000000000006020830152604082019050919050565b600061404b604483614f23565b91507f476f7665726e6f72416c7068613a3a5f71756575654f725265766572743a207060008301527f726f706f73616c20616374696f6e20616c72656164792071756575656420617460208301527f20657461000000000000000000000000000000000000000000000000000000006040830152606082019050919050565b60006140d7602c83614f23565b91507f476f7665726e6f72416c7068613a3a70726f706f73653a206d7573742070726f60008301527f7669646520616374696f6e7300000000000000000000000000000000000000006020830152604082019050919050565b600061413d603f83614f23565b91507f476f7665726e6f72416c7068613a3a70726f706f73653a2070726f706f73657260008301527f20766f7465732062656c6f772070726f706f73616c207468726573686f6c64006020830152604082019050919050565b60006141a3602f83614f23565b91507f476f7665726e6f72416c7068613a3a63617374566f746542795369673a20696e60008301527f76616c6964207369676e617475726500000000000000000000000000000000006020830152604082019050919050565b6000614209605883614f23565b91507f476f7665726e6f72416c7068613a3a70726f706f73653a206f6e65206c69766560008301527f2070726f706f73616c207065722070726f706f7365722c20666f756e6420616e60208301527f20616c7265616479206163746976652070726f706f73616c00000000000000006040830152606082019050919050565b6000614295603683614f23565b91507f476f7665726e6f72416c7068613a3a63616e63656c3a2063616e6e6f7420636160008301527f6e63656c2065786563757465642070726f706f73616c000000000000000000006020830152604082019050919050565b60006142fb602a83614f23565b91507f476f7665726e6f72416c7068613a3a5f63617374566f74653a20766f74696e6760008301527f20697320636c6f736564000000000000000000000000000000000000000000006020830152604082019050919050565b6000614361601583614f23565b91507f7375627472616374696f6e20756e646572666c6f7700000000000000000000006000830152602082019050919050565b60006143a1603683614f23565b91507f476f7665726e6f72416c7068613a3a5f5f61626469636174653a2073656e646560008301527f72206d75737420626520676f7620677561726469616e000000000000000000006020830152604082019050919050565b60608201600082015161441060008501826136c4565b50602082015161442360208501826136c4565b5060408201516144366040850182614478565b50505050565b61444581614f9a565b82525050565b61445481614f9a565b82525050565b61446381614fa4565b82525050565b6144728161506b565b82525050565b61448181614fb1565b82525050565b600061449282613ac4565b915061449e82856136f1565b6020820191506144ae82846136f1565b6020820191508190509392505050565b60006144c982613e5a565b9150819050919050565b60006144de82613ee6565b9150819050919050565b60006020820190506144fd600083018461350f565b92915050565b600060408201905061451860008301856134f1565b614525602083018461444b565b9392505050565b600060a082019050614541600083018761350f565b61454e6020830186613836565b818103604083015261455f81613b90565b905081810360608301526145738185613741565b9050614582608083018461444b565b95945050505050565b60006040820190506145a0600083018561350f565b6145ad602083018461444b565b9392505050565b60006080820190506145c9600083018761350f565b6145d6602083018661444b565b6145e360408301856136d3565b6145f06060830184614469565b95945050505050565b600060a08201905061460e600083018861350f565b61461b602083018761444b565b818103604083015261462d818661387e565b905081810360608301526146418185613741565b9050614650608083018461444b565b9695505050505050565b600060a08201905061466f600083018861350f565b61467c602083018761444b565b818103604083015261468e81866138b7565b905081810360608301526146a2818561377a565b90506146b1608083018461444b565b9695505050505050565b600060808201905081810360008301526146d5818761351e565b905081810360208301526146e98186613666565b905081810360408301526146fd81856135f1565b90508181036060830152614711818461357c565b905095945050505050565b600060208201905061473160008301846136e2565b92915050565b600060808201905061474c60008301876136e2565b61475960208301866136e2565b614766604083018561444b565b614773606083018461350f565b95945050505050565b600060608201905061479160008301866136e2565b61479e602083018561444b565b6147ab60408301846136d3565b949350505050565b60006080820190506147c860008301876136e2565b6147d5602083018661445a565b6147e260408301856136e2565b6147ef60608301846136e2565b95945050505050565b600060208201905061480d6000830184613809565b92915050565b60006020820190506148286000830184613818565b92915050565b60006020820190506148436000830184613827565b92915050565b60006020820190508181036000830152614863818461387e565b905092915050565b6000602082019050818103600083015261488481613946565b9050919050565b600060208201905081810360008301526148a4816139ac565b9050919050565b600060208201905081810360008301526148c481613a38565b9050919050565b600060208201905081810360008301526148e481613b04565b9050919050565b6000602082019050818103600083015261490481613bd0565b9050919050565b6000602082019050818103600083015261492481613c36565b9050919050565b6000602082019050818103600083015261494481613c9c565b9050919050565b6000602082019050818103600083015261496481613d28565b9050919050565b6000602082019050818103600083015261498481613db4565b9050919050565b600060208201905081810360008301526149a481613e1a565b9050919050565b600060208201905081810360008301526149c481613f4c565b9050919050565b600060208201905081810360008301526149e481613fd8565b9050919050565b60006020820190508181036000830152614a048161403e565b9050919050565b60006020820190508181036000830152614a24816140ca565b9050919050565b60006020820190508181036000830152614a4481614130565b9050919050565b60006020820190508181036000830152614a6481614196565b9050919050565b60006020820190508181036000830152614a84816141fc565b9050919050565b60006020820190508181036000830152614aa481614288565b9050919050565b60006020820190508181036000830152614ac4816142ee565b9050919050565b60006020820190508181036000830152614ae481614354565b9050919050565b60006020820190508181036000830152614b0481614394565b9050919050565b6000606082019050614b2060008301846143fa565b92915050565b6000602082019050614b3b600083018461444b565b92915050565b600061012082019050614b57600083018c61444b565b614b64602083018b6134f1565b8181036040830152614b76818a61351e565b90508181036060830152614b8a8189613666565b90508181036080830152614b9e81886135f1565b905081810360a0830152614bb2818761357c565b9050614bc160c083018661444b565b614bce60e083018561444b565b818103610100830152614be1818461387e565b90509a9950505050505050505050565b600061012082019050614c07600083018c61444b565b614c14602083018b61350f565b614c21604083018a61444b565b614c2e606083018961444b565b614c3b608083018861444b565b614c4860a083018761444b565b614c5560c083018661444b565b614c6260e08301856136d3565b614c706101008301846136d3565b9a9950505050505050505050565b6000604082019050614c93600083018561444b565b614ca0602083018461444b565b9392505050565b6000604051905081810181811067ffffffffffffffff82111715614cca57600080fd5b8060405250919050565b600067ffffffffffffffff821115614ceb57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614d1357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614d3b57600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614d6357600080fd5b602082029050602081019050919050565b600067ffffffffffffffff821115614d8b57600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115614db757600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b600081905092915050565b6000614f4a82614f7a565b9050919050565b60008115159050919050565b6000819050919050565b6000819050614f75826150da565b919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60006bffffffffffffffffffffffff82169050919050565b6000614fd482615047565b9050919050565b6000614fe682614fed565b9050919050565b6000614ff882614f7a565b9050919050565b600061500a82615011565b9050919050565b600061501c82614f7a565b9050919050565b600061502e82614f67565b9050919050565b600061504082614f9a565b9050919050565b600061505282615059565b9050919050565b600061506482614f7a565b9050919050565b600061507682614fb1565b9050919050565b82818337600083830152505050565b60005b838110156150aa57808201518184015260208101905061508f565b838111156150b9576000848401525b50505050565b6000819050919050565b6000601f19601f8301169050919050565b600881106150e457fe5b50565b6150f081614f3f565b81146150fb57600080fd5b50565b61510781614f51565b811461511257600080fd5b50565b61511e81614f5d565b811461512957600080fd5b50565b61513581614f9a565b811461514057600080fd5b50565b61514c81614fa4565b811461515757600080fd5b50565b61516381614fb1565b811461516e57600080fd5b5056fea264697066735822122061dd90b507f8eb487a8daef10172da694e324ab8a25ae8e76d08e2c9b989e01064736f6c63430006070033",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "proposalMaxOperations()": {
        "notice": "The maximum number of actions that can be included in a proposal"
      },
      "votingDelay()": {
        "notice": "The delay before voting on a proposal may take place, once proposed"
      }
    }
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2271,
        "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
        "label": "_proposalThreshold",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 2273,
        "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
        "label": "_quorumVotes",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 2275,
        "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
        "label": "_votingPeriod",
        "offset": 0,
        "slot": "2",
        "type": "t_uint32"
      },
      {
        "astId": 2295,
        "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
        "label": "timelock",
        "offset": 4,
        "slot": "2",
        "type": "t_contract(TimelockInterface)3532"
      },
      {
        "astId": 2297,
        "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
        "label": "BTRST",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(BTRSTInterface)3542"
      },
      {
        "astId": 2299,
        "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
        "label": "guardian",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 2301,
        "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
        "label": "proposalCount",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 2356,
        "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
        "label": "proposals",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_uint256,t_struct(Proposal)2336_storage)"
      },
      {
        "astId": 2360,
        "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
        "label": "latestProposalIds",
        "offset": 0,
        "slot": "7",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_array(t_bytes_storage)dyn_storage": {
        "base": "t_bytes_storage",
        "encoding": "dynamic_array",
        "label": "bytes[]",
        "numberOfBytes": "32"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint256)dyn_storage": {
        "base": "t_uint256",
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(BTRSTInterface)3542": {
        "encoding": "inplace",
        "label": "contract BTRSTInterface",
        "numberOfBytes": "20"
      },
      "t_contract(TimelockInterface)3532": {
        "encoding": "inplace",
        "label": "contract TimelockInterface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(Receipt)2343_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct GovernorAlpha.Receipt)",
        "numberOfBytes": "32",
        "value": "t_struct(Receipt)2343_storage"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_struct(Proposal)2336_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct GovernorAlpha.Proposal)",
        "numberOfBytes": "32",
        "value": "t_struct(Proposal)2336_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Proposal)2336_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Proposal",
        "members": [
          {
            "astId": 2303,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "id",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 2305,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "proposer",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 2307,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "eta",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 2310,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "targets",
            "offset": 0,
            "slot": "3",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 2313,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "values",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 2316,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "signatures",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_string_storage)dyn_storage"
          },
          {
            "astId": 2319,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "calldatas",
            "offset": 0,
            "slot": "6",
            "type": "t_array(t_bytes_storage)dyn_storage"
          },
          {
            "astId": 2321,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "startBlock",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 2323,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "endBlock",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 2325,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "forVotes",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 2327,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "againstVotes",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 2329,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "canceled",
            "offset": 0,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 2331,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "executed",
            "offset": 1,
            "slot": "11",
            "type": "t_bool"
          },
          {
            "astId": 2335,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "receipts",
            "offset": 0,
            "slot": "12",
            "type": "t_mapping(t_address,t_struct(Receipt)2343_storage)"
          }
        ],
        "numberOfBytes": "416"
      },
      "t_struct(Receipt)2343_storage": {
        "encoding": "inplace",
        "label": "struct GovernorAlpha.Receipt",
        "members": [
          {
            "astId": 2338,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "hasVoted",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2340,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "support",
            "offset": 1,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 2342,
            "contract": "contracts/GovernorAlpha.sol:GovernorAlpha",
            "label": "votes",
            "offset": 2,
            "slot": "0",
            "type": "t_uint96"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint32": {
        "encoding": "inplace",
        "label": "uint32",
        "numberOfBytes": "4"
      },
      "t_uint96": {
        "encoding": "inplace",
        "label": "uint96",
        "numberOfBytes": "12"
      }
    }
  }
}
